import threading
import time

# TODO: kazda noha je vlastny class
# TODO: Thread safe lock


class LeftLeg(threading.Thread):

    def __init__(self):
        self._x_cache = 0
        self.x = 1
        self.lock = threading.RLock()
        super(LeftLeg, self).__init__()

    def set_speed(self, speed):
        with self.lock:
            self.x = speed

    def run(self):
        while True:
            with self.lock:
                if self.x == 0:
                    break
                if self.x != self._x_cache:
                    print("Current speed: {}".format(self.x))
                    self._x_cache = self.x
            time.sleep(0.1)


class RightLeg(threading.Thread):
    def run(self):
        for x in range(1, 10):
            print(x)
            time.sleep(1)


def do_stuff(number):
    print(number)


if __name__ == "__main__":
    print("beginning")
    left = LeftLeg()
    right = RightLeg()
    left.start()
    right.start()
